{
  "db_name": "PostgreSQL",
  "query": "\n        select\n            links.id as link_id,\n            links.created_at as link_created_at,\n            links.user_id as link_user_id,\n\n            case when lists.id is not null then\n                jsonb_build_object(\n                    'list', to_jsonb(lists.*),\n                    'links',\n                    coalesce(\n                        jsonb_agg(lists_bookmarks.*)\n                        filter (where lists_bookmarks.id is not null),\n                    jsonb_build_array())\n                    || coalesce(\n                        jsonb_agg(lists_lists.*)\n                        filter (where lists_lists.id is not null),\n                    jsonb_build_array())\n                )\n            when bookmarks.id is not null then\n                to_jsonb(bookmarks.*)\n            else null end as dest\n        from links\n\n        left join lists on lists.id = links.dest_list_id\n        left join links as lists_links on lists_links.src_list_id = lists.id\n        left join bookmarks as lists_bookmarks on lists_bookmarks.id = lists_links.dest_bookmark_id\n        left join lists as lists_lists on lists_lists.id = lists_links.dest_list_id\n\n        left join bookmarks on bookmarks.id = links.dest_bookmark_id\n\n        where links.src_list_id = $1\n            and (lists is null or not lists.private or lists.user_id = $2)\n            and (lists_lists is null or not lists_lists.private or lists.user_id = $2)\n        group by links.id, lists.id, bookmarks.id\n        order by links.created_at desc\n        ",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "link_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "link_created_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 2,
        "name": "link_user_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 3,
        "name": "dest",
        "type_info": "Jsonb"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      null
    ]
  },
  "hash": "68abcbcc0dff6c66ac85e5cf975879206a5956e8bb91c219932432f7679c8aae"
}
