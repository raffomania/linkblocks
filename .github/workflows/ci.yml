name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-D warnings"

jobs:
  build-lint:
    name: Build & Lint
    runs-on: ubuntu-latest
    needs: update-sbom

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          # For cargo-run-bin
          cache-directories: ".bin"

      - name: Install REUSE tool
        run: pipx install reuse

      - name: Install cargo-run-bin
        run: cargo install cargo-run-bin

      - run: cargo bin just lint

      - run: cargo bin just generate-sbom

      - name: Check for file changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::error::Detected changes in the following files:"
            git status --porcelain
            echo "Diff:"
            git diff
            exit 1
          fi

      - run: cargo build --release
        env:
          SQLX_OFFLINE: true

      - name: podman login
        env:
          USER: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: podman login --username "$USER" --password "$PASSWORD" ghcr.io

      - run: podman system migrate

      - name: podman build linux/amd64
        run: podman build --format docker --platform linux/amd64 --manifest linkblocks -f Containerfile target/release

      - name: podman manifest push latest
        run: podman manifest push linkblocks ghcr.io/raffomania/linkblocks:latest
        if: github.ref == 'refs/heads/main'

  format-nightly:
    name: Check Formatting (nightly)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: "rustfmt"

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          # For cargo-run-bin
          cache-directories: ".bin"

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: npm
          cache-dependency-path: "package-lock.json"

      # this is needed because `npx` won't install prettier plugins
      - name: Install node dependencies
        run: npm install

      - name: Install cargo-run-bin
        run: cargo install cargo-run-bin

      - run: cargo bin just format

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2

      - name: cargo test
        run: cargo test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          SQLX_OFFLINE: true

  update-sbom:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup rust cache
        uses: Swatinem/rust-cache@v2
        with:
          # For cargo-run-bin
          cache-directories: ".bin"

      - name: Install cargo-run-bin
        run: cargo install cargo-run-bin

      - run: cargo bin just generate-sbom

      - name: Commit SBOM
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git commit -am "[dependabot skip] Update SBOM"
            git push
          fi
